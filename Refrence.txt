
/// MOBX ///
https://mobx.js.org/best/decorators.html -- mobx stuff
https://www.robinwieruch.de/mobx-react/
https://github.com/mobxjs/mobx-react
https://www.npmjs.com/package/mobx-react-inject

might look at this to allow some flexibility 
https://www.npmjs.com/package/custom-react-scripts
https://www.npmjs.com/package/custom-react-scripts#-configuration-options
https://medium.com/@timarney/but-i-dont-wanna-eject-3e3da5826e39
https://github.com/timarney/react-app-rewired


https://mobx.js.org/refguide/api.html
observable(value)
computed(() => expression)
computed(() => expression, (newValue) => void)
computed(() => expression, options)
action(fn)
action(name, fn)
observer(React.createClass({ ... }))
observer((props, context) => ReactElement)
observer(class MyComponent extends React.Component { ... })

autorun(debugname?, () => { sideEffect })
when(debugname?, () => condition, () => { sideEffect })
autorunAsync(debugname?, () => { sideEffect }, delay)
expr(() => someExpression). Just a shorthand for computed(() => someExpression).get()




for right click its the context menu: https://stackoverflow.com/questions/4235426/how-can-i-capture-the-right-click-event-in-javascript
  Use the oncontextmenu event.

Here's an example:

<div oncontextmenu="javascript:alert('success!');return false;">
    Lorem Ipsum
</div>
And using event listeners:

el.addEventListener('contextmenu', function(ev) {
    ev.preventDefault();
    alert('success!');
    return false;
}, false);

or this
  function rightclick() {
    var rightclick;
    var e = window.event;
    if (e.which) rightclick = (e.which == 3);
    else if (e.button) rightclick = (e.button == 2);
    alert(rightclick); // true or false, you can trap right click here by if comparison
}
https://www.w3schools.com/jsref/event_button.asp
https://www.sitepoint.com/building-custom-right-click-context-menu-javascript/

design patterns - https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612